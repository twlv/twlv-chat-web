(window.webpackJsonp=window.webpackJsonp||[]).push([[4,13,14],{162:function(s,e,t){"use strict";t.r(e);var i=t(46),o=t(78);t(344);Object(i.b)("tc-session",class extends o.b{get props(){return Object.assign({},super.props,{status:{type:String,value:""}})}get template(){return t(343)}created(){super.created(),this._onSessionStatus=this._onSessionStatus.bind(this),this._onSessionStream=this._onSessionStream.bind(this)}async focused(){super.focused();try{if(this.session=this.__app.call.getSession(this.parameters.id),!this.session)return console.error("Invalid session fallback to home"),void this.__app.navigate("/");let s;this.set("status",this.session.status),this.session.on("status",this._onSessionStatus),this.session.on("stream",this._onSessionStream),localStorage.TC_DEBUG_VIDEO?(this.$.localVideo.src=localStorage.TC_DEBUG_VIDEO,s=this.$.localVideo.captureStream()):s=await navigator.mediaDevices.getUserMedia({audio:!0,video:!0}),await this.async(async()=>{await this.session.setStream(s)},1e3)}catch(s){console.error("got err",s.stack)}}blurred(){super.blurred(),this.$.localVideo.src="",this.$.localVideo.srcObject=null,this.$.remoteVideo.src="",this.$.remoteVideo.srcObject=null,this.session.removeListener("status",this._onSessionStatus),this.session=void 0}_onSessionStatus(s){this.set("status",s)}_onSessionStream(s){this.$.remoteVideo.srcObject=s}async hangupClicked(s){s.preventDefault(),await this.session.hangup(),this.__app.navigate("/")}})},343:function(s,e){s.exports='<div class="pane">\n  <div>[[status]]</div>\n\n  <div>\n    <video autoplay id="remoteVideo"></video>\n    <video autoplay loop id="localVideo" style="height: 0px"></video>\n  </div>\n\n  <div>\n    <a href="#" (click)="hangupClicked(evt)">Hangup</a>\n  </div>\n</div>\n'},344:function(s,e,t){}}]);